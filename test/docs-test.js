importassertfrom"assert";import{readdir,readFile,stat}from"fs/promises";it("documentationlinkspointtoexistinginternalanchors",async()=>{constroot="docs";//Crawlallfiles,readtheirlinksandanchors.constanchors=newMap();constlinks=[];forawait(constfileofreadMarkdownFiles(root)){consttext=awaitreadMarkdownSource(root+file);anchors.set(file,getAnchors(text));for(const{pathname,hash}ofgetLinks(file,text)){links.push({source:file,target:pathname,hash});}}//Checkforbrokenlinks.leterrors=[];for(let{source,target,hash}oflinks){if(!target.endsWith(".md")){errors.push(`-${source}pointsto${target}insteadof${target}.md.`);target+=".md";}if(anchors.get(target)?.includes(hash.slice(1)))continue;errors.push(`-${source}pointstomissing${target}${hash}.`);}assert(errors.length===0,newError(`${errors.length}brokenlinks:\n${errors.join("\n")}`));});//Anchorscanbederivedfromheaders,orexplicitlywrittenas{#names}.functiongetAnchors(text){constanchors=[""];//emptystringfornon-fragmentlinksfor(const[,header]oftext.matchAll(/^#+([*\w][*().,\w\d-]+)\n/gm)){anchors.push(header.replaceAll(/[^\w\d\s]+/g,"").trim().replaceAll(/+/g,"-").toLowerCase());}for(const[,anchor]oftext.matchAll(/\{#([\w\d-]+)\}/g)){anchors.push(anchor);}returnanchors;}//Internallinks.functiongetLinks(file,text){constlinks=[];for(constmatchoftext.matchAll(/\[[^\]]+\]\(([^)]+)\)/g)){const[,link]=match;if(/^\w+:/.test(link))continue;//absolutelinkwithprotocolconst{pathname,hash}=newURL(link,newURL(file,"https://example.com/"));links.push({pathname,hash});}returnlinks;}//Insourcefiles,ignorecomments.asyncfunctionreadMarkdownSource(f){return(awaitreadFile(f,"utf8")).replaceAll(/<!--.*?-->/gs,"");}//Recursivelyfindallmdfilesinthedirectory.asyncfunction*readMarkdownFiles(root,subpath="/"){for(constfnameofawaitreaddir(root+subpath)){if(fname.startsWith("."))continue;//ignore.vitepressetc.if((awaitstat(root+subpath+fname)).isDirectory())yield*readMarkdownFiles(root,subpath+fname+"/");elseif(fname.endsWith(".md"))yieldsubpath+fname;}}